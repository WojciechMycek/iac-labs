name: CI Workflow with Groups

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.ref_name }}-ci
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"

      - name: Cache Poetry Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            ~/.local/share/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: |
          cd example-app/
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH=$PATH:$HOME/.local/bin
          poetry debug info
          poetry install --no-root

  task_lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"

      - name: Restore Poetry Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            ~/.local/share/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Run linter
        run: |
          cd example-app/
          export PATH=$PATH:$HOME/.local/bin
          poetry debug info
          poetry run task test

  task_formattert:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"

      - name: Restore Poetry Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            ~/.local/share/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Format code
        run: |
          cd example-app/
          export PATH=$PATH:$HOME/.local/bin
          poetry debug info
          poetry run task formatter

  security:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"

      - name: Restore Poetry Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            ~/.local/share/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Run security checks
        run: |
          cd example-app/
          export PATH=$PATH:$HOME/.local/bin
          poetry debug info
          poetry run task security

  test:
    runs-on: ubuntu-latest
    needs: [task_lint, task_formattert, security]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"

      - name: Restore Poetry Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            ~/.local/share/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Run tests
        run: |
          cd example-app/
          export PATH=$PATH:$HOME/.local/bin
          poetry debug info
          poetry run task security
